{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ahmad/University/JavaScript/messenger-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { Button, Input, InputLabel, Modal } from '@material-ui/core';\nimport { FormControl } from '@material-ui/core';\nimport Message from './Components/Message';\nimport { db, auth } from './firebase';\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([{\n    username: '',\n    message: ''\n  }]);\n  const [username, setUsername] = useState('');\n  const [user, setUser] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        setUsername(authUser);\n      } else {\n        setUser(null);\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [user, username]); // ******************************Material Ui Modal styling******************************\n\n  function getModalStyle() {\n    const top = 50;\n    const left = 50;\n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`\n    };\n  }\n\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    }\n  }));\n  const classes = useStyles(); // ******************************************************************************************\n\n  const signUp = event => {\n    event.preventDefault();\n    auth.createUserWithEmailAndPassword(email, password).then(authUser => {\n      return authUser.user.updateProfile({\n        displayName: username\n      });\n    }).catch(error => alert(error.message));\n  };\n\n  useEffect(() => {\n    db.collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => ({\n        id: doc.id,\n        message: doc.data()\n      })));\n    });\n  }, []);\n\n  const handleChange = event => {\n    const inp = event.target.value;\n    setInput(inp);\n  };\n\n  const sendMessage = event => {\n    event.preventDefault(); // To Add messages Locally\n    // setMessages([...messages, {username:username, text:input}]);\n    //To add messages from Database\n\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://seeklogo.com/images/F/facebook-messenger-logo-36376366E2-seeklogo.com.png?w=100&h=100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Messenger Clone \\uD83D\\uDD25\\uD83D\\uDD25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"app__form\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"app__formControl\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          className: \"app__inputLabel\",\n          children: \"Type Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: input,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          className: \"app__button\",\n          disabled: !input,\n          type: \"submit\",\n          onClick: sendMessage,\n          color: \"primary\",\n          variant: \"contained\",\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: () => setOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"app__headerImage\",\n          src: \"https://assets.website-files.com/5c75b94c8dd1ae50d3b9294b/5d48831280adb734a5db5620_hukglfkfklk%3B-p-500.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"app__form\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: email,\n            onChange: event => setEmail(event.target.value),\n            placeholder: \"Enter your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: username,\n            onChange: event => setUsername(event.target.value),\n            placeholder: \"Enter Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            value: password,\n            onChange: event => setPassword(event.target.value),\n            placeholder: \"Enter Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: signUp,\n            color: \"primary\",\n            variant: \"contained\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Qqq+MowNECzC2seGLSjCh9QZXR4=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ahmad/University/JavaScript/messenger-clone/src/App.js"],"names":["useState","useEffect","Button","Input","InputLabel","Modal","FormControl","Message","db","auth","firebase","FlipMove","SendIcon","IconButton","App","input","setInput","messages","setMessages","username","message","setUsername","user","setUser","email","setEmail","password","setPassword","open","setOpen","unsubscribe","onAuthStateChanged","authUser","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","classes","signUp","event","preventDefault","createUserWithEmailAndPassword","then","updateProfile","displayName","catch","error","alert","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","handleChange","inp","target","value","sendMessage","add","timestamp","firestore","FieldValue","serverTimestamp","modalStyle"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport { Button, Input, InputLabel, Modal } from '@material-ui/core';\nimport { FormControl } from '@material-ui/core';\nimport Message from './Components/Message';\nimport { db, auth } from './firebase';\nimport firebase from 'firebase'\nimport FlipMove from 'react-flip-move';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([{ username: '', message: '' }]);\n  const [username, setUsername] = useState('');\n  const [user, setUser] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser)=>{\n      if(authUser) {\n        setUsername(authUser);\n      } else {\n        setUser(null);\n      }\n    })\n    return ()=>{\n      unsubscribe();\n    }\n  }, [user, username])\n\n  // ******************************Material Ui Modal styling******************************\n  function getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\n  const classes = useStyles();\n  // ******************************************************************************************\n\n  const signUp = (event) => {\n    event.preventDefault();\n    auth.createUserWithEmailAndPassword(email, password)\n    .then((authUser)=>{return authUser.user.updateProfile({displayName:username})})\n    .catch((error)=>alert(error.message));\n  }\n\n  useEffect(() => {\n    db.collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => ({ id: doc.id, message: doc.data() })))\n    })\n  }, [])\n\n  const handleChange = (event) => {\n    const inp = event.target.value;\n    setInput(inp);\n  }\n  const sendMessage = (event) => {\n    event.preventDefault();\n    // To Add messages Locally\n    // setMessages([...messages, {username:username, text:input}]);\n\n    //To add messages from Database\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n    setInput('');\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='app__header'>\n        <img src='https://seeklogo.com/images/F/facebook-messenger-logo-36376366E2-seeklogo.com.png?w=100&h=100' />\n        <h1>Messenger Clone 🔥🔥</h1>\n        <h2>Welcome {username}</h2>\n      </div>\n      <form className='app__form'>\n        <FormControl className='app__formControl'>\n          <InputLabel className='app__inputLabel'>Type Message</InputLabel>\n          <Input value={input} onChange={handleChange} />\n          <IconButton className='app__button' disabled={!input} type='submit' onClick={sendMessage} color='primary' variant='contained'>\n            <SendIcon />\n          </IconButton>\n          {/* <Button className='app__button' disabled={!input} type='submit' onClick={sendMessage} color='primary' variant='contained'>Send</Button> */}\n        </FormControl>\n      </form>\n      {/* <FlipMove>\n        {\n          messages.map(({ id, message }) => (<Message key={id} username={username} message={message} />))\n        }\n      </FlipMove> */}\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <img className='app__headerImage' src='https://assets.website-files.com/5c75b94c8dd1ae50d3b9294b/5d48831280adb734a5db5620_hukglfkfklk%3B-p-500.png' alt='' />\n          <form className='app__form'>\n            <Input type='text' value={email} onChange={(event) => setEmail(event.target.value)} placeholder='Enter your Email' />\n            <Input type='text' value={username} onChange={(event) => setUsername(event.target.value)} placeholder='Enter Username' />\n            <Input type='password' value={password} onChange={(event) => setPassword(event.target.value)} placeholder='Enter Password' />\n            <Button type='submit' onClick={signUp} color='primary' variant='contained'>Sign Up</Button>\n          </form>\n        </div>\n      </Modal>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}