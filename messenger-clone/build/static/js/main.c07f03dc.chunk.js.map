{"version":3,"sources":["Components/Message.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","email","className","Card","id","CardContent","Typography","color","variant","component","username","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","App","React","useState","top","left","transform","modalStyle","user","setUser","setUsername","setEmail","password","setPassword","openSignUp","setOpenSignUp","openSignIn","setOpenSignIn","input","setInput","messages","setMessages","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","unsubscribe","onAuthStateChanged","authUser","classes","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","useStyles","src","alt","displayName","Button","onClick","signOut","FormControl","InputLabel","Input","value","onChange","event","inp","target","IconButton","disabled","type","preventDefault","add","timestamp","FieldValue","serverTimestamp","Modal","open","onClose","style","placeholder","createUserWithEmailAndPassword","then","updateProfile","catch","error","alert","signInWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c07f03dc.chunk.js","sourcesContent":["import React, { forwardRef } from 'react'\nimport { Card, CardContent, Typography } from '@material-ui/core';\nimport './message.css'\nconst Message = forwardRef(({ message, email }, ref) => {\n    const isUser = email === message.email;\n    return (\n        <div className={`message ${isUser && 'message__user'}`} ref={ref}>\n            <Card id={isUser ? 'message__userCard' : 'message__guestCard'}>\n                <CardContent>\n                    <Typography\n                        color='white'\n                        variant='h5'\n                        component='h2'\n                    >\n                        {!isUser && `${message.username}: `} {message.message}\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n    )\n})\n\nexport default Message","import firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyBgl5wVZrAytDqsA6eo_2PxuGy8VGCpip4\",\n    authDomain: \"massenger-clone-26e8d.firebaseapp.com\",\n    projectId: \"massenger-clone-26e8d\",\n    storageBucket: \"massenger-clone-26e8d.appspot.com\",\n    messagingSenderId: \"919830513533\",\n    appId: \"1:919830513533:web:1a401507238709a54fee14\",\n    measurementId: \"G-R1BKF26K2E\"\n})\nconst db = firebaseApp.firestore();\nconst auth = firebaseApp.auth();\nexport { db, auth };","import './App.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Button, Input, InputLabel, Modal } from '@material-ui/core';\nimport { FormControl } from '@material-ui/core';\nimport Message from './Components/Message';\nimport { db, auth } from './firebase';\nimport firebase from 'firebase'\nimport FlipMove from 'react-flip-move';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction App() {\n  const [modalStyle] = React.useState(getModalStyle);\n  const [user, setUser] = useState(null);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [openSignUp, setOpenSignUp] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([{ username: '', message: '' }]);\n\n  useEffect(() => {\n    db.collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => ({ id: doc.id, message: doc.data() })))\n    })\n  }, [])\n\n  const handleChange = (event) => {\n    const inp = event.target.value;\n    setInput(inp);\n  }\n  const sendMessage = (event) => {\n    event.preventDefault();\n    // To Add messages Locally\n    // setMessages([...messages, {username:username, text:input}]);\n\n    //To add messages from Database\n    db.collection('messages').add({\n      message: input,\n      username: user?.displayName,\n      email: user?.email,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n    setInput('');\n  }\n\n  useEffect(()=>{\n    const unsubscribe = auth.onAuthStateChanged((authUser)=>{\n      if(authUser) {\n        setUser(authUser)\n      } else {\n        setUser(null);\n      }\n    })\n    return ()=>{\n      unsubscribe();\n    }\n  },[])\n\n  const signUp = (event)=>{\n    event.preventDefault()\n    auth.createUserWithEmailAndPassword(email, password)\n    .then((authUser)=>{return authUser.user.updateProfile({displayName: username})})\n    .catch((error)=>{alert(error.message)})\n    setOpenSignUp(false);\n    setEmail('');\n    setUsername('');\n    setPassword('');\n  }\n  \n  const signIn = (event)=>{\n    event.preventDefault()\n    auth.signInWithEmailAndPassword(email, password)\n    .catch((error)=>alert(error.message));\n    setOpenSignIn(false);\n    setEmail('');\n    setPassword('');\n  }\n  \n  // ******************************Material Ui Modal styling******************************\n  function getModalStyle() {\n    const top = 50;\n    const left = 50;\n    \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\n  const classes = useStyles();\n  // ******************************************************************************************\n  \n  return(\n    <div>\n      {\n        user?(\n          <>\n            <div className=\"App\">\n            <div className='app__header'>\n              <img src='https://seeklogo.com/images/F/facebook-messenger-logo-36376366E2-seeklogo.com.png?w=100&h=100' alt='logo'/>\n              <h1>Messenger Clone 🔥🔥</h1>\n              <h2>Welcome {user?.displayName}</h2>\n            </div>\n            <div className='app__button2'>\n              <Button color='primary' variant='contained' onClick={()=>auth.signOut()}>Log Out</Button>\n            </div>\n            <form className='app__form'>\n              <FormControl className='app__formControl'>\n                <InputLabel className='app__inputLabel'>Type Message</InputLabel>\n                <Input value={input} onChange={handleChange} />\n                <IconButton className='app__button' disabled={!input} type='submit' onClick={sendMessage} color='primary' variant='contained'>\n                  <SendIcon />\n                </IconButton>\n                {/* <Button className='app__button' disabled={!input} type='submit' onClick={sendMessage} color='primary' variant='contained'>Send</Button> */}\n              </FormControl>\n            </form>\n            <FlipMove>\n              {\n                messages.map(({ id, message }) => (<Message key={id} username={user?.displayName} email={user?.email} user={user} message={message} />))\n              }\n            </FlipMove>\n          </div>\n          </>\n        ):(\n          <>\n            <div className='app__header'>\n              <img src='https://seeklogo.com/images/F/facebook-messenger-logo-36376366E2-seeklogo.com.png?w=100&h=100' alt='logo'/>\n              <h1>Messenger Clone 🔥🔥</h1>\n              <h1>Sign Up for free or Sign In to Chat 🔥🔥</h1>\n            </div>\n            <div className='app__button1'>\n              <Button color='primary' variant='contained' onClick={()=>setOpenSignIn(true)}>Log In</Button>\n              <Button color='primary' variant='contained' onClick={()=>setOpenSignUp(true)}>Sign Up</Button>\n            </div>\n          </>\n        )\n      }\n\n\n\n\n\n      {/* Material Ui Modal */}\n\n      <Modal\n        open={openSignUp}\n        onClose={() => setOpenSignUp(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className='app__modalForm'>\n            <Input type='text' value={email} onChange={(event) => setEmail(event.target.value)} placeholder='Enter your Email' />\n            <Input type='text' value={username} onChange={(event) => setUsername(event.target.value)} placeholder='Enter Username' />\n            <Input type='password' value={password} onChange={(event) => setPassword(event.target.value)} placeholder='Enter Password' />\n            <Button type='submit' onClick={signUp} color='primary' variant='contained'>Sign Up</Button>\n          </form>\n        </div>\n      </Modal>\n\n      <Modal\n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className='app__modalForm'>\n            <Input type='text' value={email} onChange={(event) => setEmail(event.target.value)} placeholder='Enter your Email' />\n            <Input type='password' value={password} onChange={(event) => setPassword(event.target.value)} placeholder='Enter Password' />\n            <Button type='submit' onClick={signIn} color='primary' variant='contained'>Log In</Button>\n          </form>\n        </div>\n      </Modal>\n\n      {/* ******************** */}\n\n      \n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}