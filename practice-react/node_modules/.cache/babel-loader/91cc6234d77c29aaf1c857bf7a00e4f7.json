{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ahmad/University/JavaScript/practice-react/src/ValidationForm.js\";\nimport React, { Component } from 'react';\nexport class ValidationForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      nameError: '',\n      emailError: '',\n      passwordError: ''\n    };\n    this.initialState = {\n      nameError: '',\n      emailError: '',\n      passwordError: ''\n    };\n\n    this.handleChange = (event, checkEvent) => {\n      console.log(event.target.name);\n      this.setState({\n        [event.target.name]: checkEvent ? event.target.checked : event.target.value\n      });\n    };\n\n    this.handleCheck = event => {\n      this.setState({\n        checkbox: event.target.checked\n      });\n    };\n\n    this.validate = () => {\n      // if(this.state.name===''){\n      //     this.setState({\n      //         nameError: 'Name field cannot be Empty'\n      //     })\n      // } else {\n      //     this.setState({\n      //         nameError: '',\n      //     })\n      // }\n      // if(!this.state.email.includes('@')){\n      //     this.setState({\n      //         emailError: 'Invalid Email',\n      //     })\n      // } else {\n      //     this.setState({\n      //         emailError: '',\n      //     })\n      // }\n      // if(this.state.password===''){\n      //     this.setState({\n      //         passwordError: 'Invalid Password',\n      //     })\n      // } else {\n      //     this.setState({\n      //         passwordError: '',\n      //     })\n      // }\n      //========Approach-2============\n      let nameError = \"\";\n      let emailError = \"\";\n      let passwordError = \"\";\n\n      if (this.state.name === '') {\n        nameError = 'Name field cannot be Empty';\n      }\n\n      if (nameError) {\n        this.setState({\n          nameError\n        });\n      }\n\n      if (!this.state.email.includes('@')) {\n        emailError = 'Invalid Email';\n      }\n\n      if (emailError) {\n        this.setState({\n          emailError\n        });\n      }\n\n      if (this.state.password === '') {\n        passwordError = 'Invalid Password';\n      }\n\n      if (passwordError) {\n        this.setState({\n          passwordError\n        });\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.validate(); // this.setState(this.initialState);\n\n      console.log(this.state);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          value: this.state.name,\n          onChange: this.handleChange,\n          placeholder: \"Enter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '15px',\n          color: 'red'\n        },\n        children: this.state.nameError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          value: this.state.email,\n          onChange: this.handleChange,\n          placeholder: \"Enter Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '15px',\n          color: 'red'\n        },\n        children: this.state.emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.text,\n          onChange: this.handleChange,\n          placeholder: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '15px',\n          color: 'red'\n        },\n        children: this.state.passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ahmad/University/JavaScript/practice-react/src/ValidationForm.js"],"names":["React","Component","ValidationForm","state","name","email","password","nameError","emailError","passwordError","initialState","handleChange","event","checkEvent","console","log","target","setState","checked","value","handleCheck","checkbox","validate","includes","handleSubmit","preventDefault","render","fontSize","color","text"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nexport class ValidationForm extends Component {\n    state = {\n        name: '',\n        email: '',\n        password: '',\n        nameError: '',\n        emailError: '',\n        passwordError: '',\n    };\n    initialState = {\n        nameError: '',\n        emailError: '',\n        passwordError: '',\n    };\n    handleChange = (event, checkEvent) => {\n        console.log(event.target.name);\n        this.setState({ [event.target.name]: checkEvent ? event.target.checked : event.target.value })\n    };\n    handleCheck = (event) => {\n        this.setState({ checkbox: event.target.checked })\n    }\n    validate = () => {\n        // if(this.state.name===''){\n        //     this.setState({\n        //         nameError: 'Name field cannot be Empty'\n        //     })\n        // } else {\n        //     this.setState({\n        //         nameError: '',\n        //     })\n        // }\n        // if(!this.state.email.includes('@')){\n        //     this.setState({\n        //         emailError: 'Invalid Email',\n        //     })\n        // } else {\n        //     this.setState({\n        //         emailError: '',\n        //     })\n        // }\n        // if(this.state.password===''){\n        //     this.setState({\n        //         passwordError: 'Invalid Password',\n        //     })\n        // } else {\n        //     this.setState({\n        //         passwordError: '',\n        //     })\n        // }\n\n        //========Approach-2============\n\n        let nameError = \"\";\n        let emailError = \"\";\n        let passwordError = \"\";\n        if(this.state.name===''){\n            nameError = 'Name field cannot be Empty';\n        }\n        if(nameError){\n            this.setState({nameError});\n        }\n        if(!this.state.email.includes('@')){\n            emailError = 'Invalid Email';\n        }\n        if(emailError){\n            this.setState({emailError});\n        }\n        if(this.state.password===''){\n            passwordError = 'Invalid Password';\n        }\n        if(passwordError){\n            this.setState({passwordError});\n        }\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.validate();\n        // this.setState(this.initialState);\n        console.log(this.state);\n    }\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} >\n                <div>\n                    <input\n                        name='name'\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        placeholder=\"Enter Name\" />\n                </div>\n                <div style={{fontSize: '15px', color: 'red'}}>\n                    {this.state.nameError}\n                </div>\n                <div>\n                    <input\n                        name='email'\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                        placeholder=\"Enter Email\" />\n                </div>\n                <div style={{fontSize: '15px', color: 'red'}}>\n                    {this.state.emailError}\n                </div>\n                <div>\n                    <input\n                        name='password'\n                        type='password'\n                        value={this.state.text}\n                        onChange={this.handleChange}\n                        placeholder=\"Enter Password\" />\n                </div>\n                <div style={{fontSize: '15px', color: 'red'}}>\n                    {this.state.passwordError}\n                </div>\n                <div>\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n        )\n    }\n} "]},"metadata":{},"sourceType":"module"}