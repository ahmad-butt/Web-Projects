{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ahmad/University/JavaScript/practice-react/src/ValidationForm.js\";\nimport React, { Component } from 'react';\nimport { Input, Button } from '@material-ui/core';\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n  nameError: '',\n  emailError: '',\n  passwordError: ''\n};\nexport class ValidationForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleChange = (event, checkEvent) => {\n      console.log(event.target.name);\n      this.setState({\n        [event.target.name]: checkEvent ? event.target.checked : event.target.value\n      });\n    };\n\n    this.handleCheck = event => {\n      this.setState({\n        checkbox: event.target.checked\n      });\n    };\n\n    this.validate = () => {\n      //===========Approach-1==============\n      // if(this.state.name===''){\n      //     this.setState({\n      //         nameError: 'Name field cannot be Empty'\n      //     })\n      // } else {\n      //     this.setState({\n      //         nameError: '',\n      //     })\n      // }\n      // if(!this.state.email.includes('@')){\n      //     this.setState({\n      //         emailError: 'Invalid Email',\n      //     })\n      // } else {\n      //     this.setState({\n      //         emailError: '',\n      //     })\n      // }\n      // if(this.state.password===''){\n      //     this.setState({\n      //         passwordError: 'Invalid Password',\n      //     })\n      // } else {\n      //     this.setState({\n      //         passwordError: '',\n      //     })\n      // }\n      //========Approach-2============\n      let nameError = \"\";\n      let emailError = \"\";\n      let passwordError = \"\";\n\n      if (this.state.name === '') {\n        nameError = 'Name field cannot be Empty';\n      }\n\n      if (!this.state.email.includes('@')) {\n        emailError = 'Invalid Email';\n      }\n\n      if (this.state.password === '') {\n        passwordError = 'Invalid Password';\n      }\n\n      if (nameError || emailError || passwordError) {\n        this.setState({\n          nameError,\n          emailError,\n          passwordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const valid = this.validate();\n\n      if (valid) {\n        this.setState(initialState);\n      }\n\n      console.log(this.state);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"name\",\n          value: this.state.name,\n          onChange: this.handleChange,\n          placeholder: \"Enter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '15px',\n          color: 'red'\n        },\n        children: this.state.nameError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"email\",\n          value: this.state.email,\n          onChange: this.handleChange,\n          placeholder: \"Enter Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '15px',\n          color: 'red'\n        },\n        children: this.state.emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange,\n          placeholder: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '15px',\n          color: 'red'\n        },\n        children: this.state.passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          style: {\n            color: 'Yellow',\n            backgroundColor: \"yellow\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ahmad/University/JavaScript/practice-react/src/ValidationForm.js"],"names":["React","Component","Input","Button","initialState","name","email","password","nameError","emailError","passwordError","ValidationForm","state","handleChange","event","checkEvent","console","log","target","setState","checked","value","handleCheck","checkbox","validate","includes","handleSubmit","preventDefault","valid","render","fontSize","color","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Input, Button } from '@material-ui/core';\nconst initialState = {\n    name: '',\n    email: '',\n    password: '',\n    nameError: '',\n    emailError: '',\n    passwordError: '',\n};\nexport class ValidationForm extends Component {\n    state = initialState;\n    handleChange = (event, checkEvent) => {\n        console.log(event.target.name);\n        this.setState({ [event.target.name]: checkEvent ? event.target.checked : event.target.value })\n    };\n    handleCheck = (event) => {\n        this.setState({ checkbox: event.target.checked })\n    }\n    validate = () => {\n\n        //===========Approach-1==============\n\n        // if(this.state.name===''){\n        //     this.setState({\n        //         nameError: 'Name field cannot be Empty'\n        //     })\n        // } else {\n        //     this.setState({\n        //         nameError: '',\n        //     })\n        // }\n        // if(!this.state.email.includes('@')){\n        //     this.setState({\n        //         emailError: 'Invalid Email',\n        //     })\n        // } else {\n        //     this.setState({\n        //         emailError: '',\n        //     })\n        // }\n        // if(this.state.password===''){\n        //     this.setState({\n        //         passwordError: 'Invalid Password',\n        //     })\n        // } else {\n        //     this.setState({\n        //         passwordError: '',\n        //     })\n        // }\n\n        //========Approach-2============\n\n        let nameError = \"\";\n        let emailError = \"\";\n        let passwordError = \"\";\n        if (this.state.name === '') {\n            nameError = 'Name field cannot be Empty';\n        }\n        if (!this.state.email.includes('@')) {\n            emailError = 'Invalid Email';\n        }\n        if (this.state.password === '') {\n            passwordError = 'Invalid Password';\n        }\n        if (nameError || emailError || passwordError) {\n            this.setState({ nameError, emailError, passwordError });\n            return false;\n        }\n        return true;\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const valid = this.validate();\n        if (valid) {\n            this.setState(initialState);\n        }\n        console.log(this.state);\n    }\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} >\n                <div>\n                    <Input\n                        name='name'\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        placeholder=\"Enter Name\" />\n                </div>\n                <div style={{ fontSize: '15px', color: 'red' }}>\n                    {this.state.nameError}\n                </div>\n                <div>\n                    <Input\n                        name='email'\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                        placeholder=\"Enter Email\" />\n                </div>\n                <div style={{ fontSize: '15px', color: 'red' }}>\n                    {this.state.emailError}\n                </div>\n                <div>\n                    <Input\n                        name='password'\n                        type='password'\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                        placeholder=\"Enter Password\" />\n                </div>\n                <div style={{ fontSize: '15px', color: 'red' }}>\n                    {this.state.passwordError}\n                </div>\n                <div>\n                    <Button type=\"submit\" style={{color:'Yellow', backgroundColor: \"yellow\"}}>Submit</Button>\n                </div>\n            </form>\n        )\n    }\n} "]},"metadata":{},"sourceType":"module"}