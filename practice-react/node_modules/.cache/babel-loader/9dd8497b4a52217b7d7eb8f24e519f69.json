{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ahmad/University/JavaScript/practice-react/src/ValidationForm.js\";\nimport React, { Component } from 'react';\nexport class ValidationForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      nameError: '',\n      emailError: '',\n      passwordError: ''\n    };\n\n    this.handleChange = (event, checkEvent) => {\n      console.log(event.target.name);\n      this.setState({\n        [event.target.name]: checkEvent ? event.target.checked : event.target.value\n      });\n    };\n\n    this.handleCheck = event => {\n      this.setState({\n        checkbox: event.target.checked\n      });\n    };\n\n    this.validate = () => {\n      if (this.state.name === '') {\n        this.state.nameError = 'Name field cannot be empty';\n      } else {\n        this.state.nameError = '';\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.validate();\n      console.log(this.state);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          value: this.state.name,\n          onChange: this.handleChange,\n          placeholder: \"Enter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.nameError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          value: this.state.email,\n          onChange: this.handleChange,\n          placeholder: \"Enter Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.text,\n          onChange: this.handleChange,\n          placeholder: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ahmad/University/JavaScript/practice-react/src/ValidationForm.js"],"names":["React","Component","ValidationForm","state","name","email","password","nameError","emailError","passwordError","handleChange","event","checkEvent","console","log","target","setState","checked","value","handleCheck","checkbox","validate","handleSubmit","preventDefault","render","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAC1CE,KAD0C,GAClC;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,QAAQ,EAAE,EAHN;AAIJC,MAAAA,SAAS,EAAE,EAJP;AAKJC,MAAAA,UAAU,EAAE,EALR;AAMJC,MAAAA,aAAa,EAAE;AANX,KADkC;;AAAA,SAS1CC,YAT0C,GAS3B,CAACC,KAAD,EAAQC,UAAR,KAAuB;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAN,CAAaX,IAAzB;AACA,WAAKY,QAAL,CAAc;AAAE,SAACL,KAAK,CAACI,MAAN,CAAaX,IAAd,GAAqBQ,UAAU,GAAGD,KAAK,CAACI,MAAN,CAAaE,OAAhB,GAA0BN,KAAK,CAACI,MAAN,CAAaG;AAAxE,OAAd;AACH,KAZyC;;AAAA,SAa1CC,WAb0C,GAa3BR,KAAD,IAAW;AACrB,WAAKK,QAAL,CAAc;AAAEI,QAAAA,QAAQ,EAAET,KAAK,CAACI,MAAN,CAAaE;AAAzB,OAAd;AACH,KAfyC;;AAAA,SAgB1CI,QAhB0C,GAgB/B,MAAM;AACb,UAAG,KAAKlB,KAAL,CAAWC,IAAX,KAAkB,EAArB,EAAwB;AACpB,aAAKD,KAAL,CAAWI,SAAX,GAAuB,4BAAvB;AACH,OAFD,MAEO;AACH,aAAKJ,KAAL,CAAWI,SAAX,GAAuB,EAAvB;AACH;AACJ,KAtByC;;AAAA,SAuB1Ce,YAvB0C,GAuB1BX,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACY,cAAN;AACA,WAAKF,QAAL;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACH,KA3ByC;AAAA;;AA4B1CqB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKF,YAArB;AAAA,8BACI;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,IAFtB;AAGI,UAAA,QAAQ,EAAE,KAAKM,YAHnB;AAII,UAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBACK,KAAKP,KAAL,CAAWI;AADhB;AAAA;AAAA;AAAA;AAAA,cARJ,eAWI;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,KAFtB;AAGI,UAAA,QAAQ,EAAE,KAAKK,YAHnB;AAII,UAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ,eAkBI;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,KAAK,EAAE,KAAKP,KAAL,CAAWsB,IAHtB;AAII,UAAA,QAAQ,EAAE,KAAKf,YAJnB;AAKI,UAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlBJ,eA0BI;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgCH;;AA7DyC","sourcesContent":["import React, { Component } from 'react';\nexport class ValidationForm extends Component {\n    state = {\n        name: '',\n        email: '',\n        password: '',\n        nameError: '',\n        emailError: '',\n        passwordError: '',\n    };\n    handleChange = (event, checkEvent) => {\n        console.log(event.target.name);\n        this.setState({ [event.target.name]: checkEvent ? event.target.checked : event.target.value })\n    };\n    handleCheck = (event) => {\n        this.setState({ checkbox: event.target.checked })\n    }\n    validate = () => {\n        if(this.state.name===''){\n            this.state.nameError = 'Name field cannot be empty';\n        } else {\n            this.state.nameError = '';   \n        }\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.validate();\n        console.log(this.state);\n    }\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} >\n                <div>\n                    <input\n                        name='name'\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        placeholder=\"Enter Name\" />\n                </div>\n                <div>\n                    {this.state.nameError}\n                </div>\n                <div>\n                    <input\n                        name='email'\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                        placeholder=\"Enter Email\" />\n                </div>\n                <div>\n                    <input\n                        name='password'\n                        type='password'\n                        value={this.state.text}\n                        onChange={this.handleChange}\n                        placeholder=\"Enter Password\" />\n                </div>\n                <div>\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n        )\n    }\n} "]},"metadata":{},"sourceType":"module"}