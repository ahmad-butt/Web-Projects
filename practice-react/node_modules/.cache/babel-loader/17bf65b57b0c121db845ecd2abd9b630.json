{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ahmad/University/JavaScript/practice-react/src/PersonAPI.js\";\nimport React, { Component } from 'react';\nexport class PersonAPI extends Component {\n  constructor(props) {\n    super(props);\n    this.peopleJSX = this.state.person.map((person, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: person.name.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: person.name.first\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: person.name.last\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: person.picture.large\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, `some-person-${i}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this));\n    this.state = {\n      loading: true,\n      person: []\n    };\n  }\n\n  async componentDidMount() {\n    const url = 'https://api.randomuser.me/?results=5';\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      person: data.results,\n      loading: false\n    }); // console.log(data.results[0].name.first);\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Still Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (!this.state.person) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ahmad/University/JavaScript/practice-react/src/PersonAPI.js"],"names":["React","Component","PersonAPI","constructor","props","peopleJSX","state","person","map","i","name","title","first","last","picture","large","loading","componentDidMount","url","response","fetch","data","json","setState","results","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AACrCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAcnBC,SAdmB,GAcP,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,CAACD,MAAD,EAASE,CAAT,kBAC9B;AAAA,8BACI;AAAA,kBAAMF,MAAM,CAACG,IAAP,CAAYC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAMJ,MAAM,CAACG,IAAP,CAAYE;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAML,MAAM,CAACG,IAAP,CAAYG;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,GAAG,EAAEN,MAAM,CAACO,OAAP,CAAeC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,OAAW,eAAcN,CAAE,EAA3B;AAAA;AAAA;AAAA;AAAA,YADQ,CAdO;AAEf,SAAKH,KAAL,GAAa;AACTU,MAAAA,OAAO,EAAE,IADA;AAETT,MAAAA,MAAM,EAAE;AAFC,KAAb;AAIH;;AACD,QAAMU,iBAAN,GAA0B;AACtB,UAAMC,GAAG,GAAG,sCAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEhB,MAAAA,MAAM,EAAEc,IAAI,CAACG,OAAf;AAAwBR,MAAAA,OAAO,EAAE;AAAjC,KAAd,EAJsB,CAKtB;AACH;;AASDS,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKnB,KAAL,CAAWU,OAAf,EAAwB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,QAAI,CAAC,KAAKV,KAAL,CAAWC,MAAhB,EAAwB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAnCoC","sourcesContent":["import React, { Component } from 'react';\nexport class PersonAPI extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            person: [],\n        };\n    }\n    async componentDidMount() {\n        const url = 'https://api.randomuser.me/?results=5';\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({ person: data.results, loading: false })\n        // console.log(data.results[0].name.first);\n    }\n    peopleJSX = this.state.person.map((person, i) => (\n        <div key={`some-person-${i}`}>\n            <div>{person.name.title}</div>\n            <div>{person.name.first}</div>\n            <div>{person.name.last}</div>\n            <img src={person.picture.large} />\n        </div>\n    ))\n    render() {\n        if (this.state.loading) {\n            return <div>Still Loading</div>\n        }\n        if (!this.state.person) {\n            return <div>No Person</div>\n        }\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}