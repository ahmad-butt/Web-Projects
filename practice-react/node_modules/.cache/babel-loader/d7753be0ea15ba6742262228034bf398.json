{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ahmad/University/JavaScript/practice-react/src/PersonAPI.js\";\nimport React, { Component } from 'react';\nexport class PersonAPI extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      people: []\n    };\n  }\n\n  async componentDidMount() {\n    const url = 'https://api.randomuser.me/?results=5';\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      people: data.results[0],\n      loading: false\n    }); // console.log(data.results[0].name.first);\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Still Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (!this.state.person) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.person.name.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.person.name.first\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.person.name.last\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.person.picture.large\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ahmad/University/JavaScript/practice-react/src/PersonAPI.js"],"names":["React","Component","PersonAPI","constructor","props","state","loading","people","componentDidMount","url","response","fetch","data","json","setState","results","render","person","name","title","first","last","picture","large"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AACrCE,EAAAA,WAAW,CAACC,KAAD,EAAS;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,IADA;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAIH;;AACD,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,GAAG,GAAG,sCAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAACP,MAAAA,MAAM,EAAEK,IAAI,CAACG,OAAL,CAAa,CAAb,CAAT;AAA0BT,MAAAA,OAAO,EAAE;AAAnC,KAAd,EAJsB,CAKtB;AACH;;AACDU,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKX,KAAL,CAAWC,OAAd,EAAsB;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,QAAG,CAAC,KAAKD,KAAL,CAAWY,MAAf,EAAsB;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,wBACI;AAAA,8BACI;AAAA,kBAAM,KAAKZ,KAAL,CAAWY,MAAX,CAAkBC,IAAlB,CAAuBC;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAM,KAAKd,KAAL,CAAWY,MAAX,CAAkBC,IAAlB,CAAuBE;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAM,KAAKf,KAAL,CAAWY,MAAX,CAAkBC,IAAlB,CAAuBG;AAA7B;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,GAAG,EAAE,KAAKhB,KAAL,CAAWY,MAAX,CAAkBK,OAAlB,CAA0BC;AAApC;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA/BoC","sourcesContent":["import React, { Component } from 'react';\nexport class PersonAPI extends Component {\n    constructor(props)  {\n        super(props);\n        this.state = {\n            loading: true,\n            people: [],\n        };\n    }\n    async componentDidMount() {\n        const url = 'https://api.randomuser.me/?results=5';\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({people: data.results[0], loading: false})\n        // console.log(data.results[0].name.first);\n    }\n    render() {\n        if(this.state.loading){\n            return <div>Still Loading</div>\n        }\n        if(!this.state.person){\n            return <div>No Person</div>\n        }\n\n        return (\n            <div>\n                <div>{this.state.person.name.title}</div>\n                <div>{this.state.person.name.first}</div>\n                <div>{this.state.person.name.last}</div>\n                <img src={this.state.person.picture.large}/>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}