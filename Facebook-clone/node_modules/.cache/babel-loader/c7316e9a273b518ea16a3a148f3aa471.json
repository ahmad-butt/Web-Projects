{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ahmad/University/JavaScript/revise-todo/src/Components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Button, Input } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport firebase from 'firebase';\nimport './Post.css';\n\nfunction Posts(props) {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n  useEffect(() => {\n    const unsubscribe = db.collection('posts').doc(props.postID).collection('comments').orderBy('timestamp', 'asc').onSnapshot(snapshot => {\n      setComments(snapshot.docs.map(doc => ({\n        id: doc.id,\n        comment: doc.data()\n      })));\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [props.postID]);\n\n  const postComment = () => {\n    db.collection('posts').doc(props.postID).collection('comments').add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      comment: comment\n    });\n    setComment('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post__header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"post__headerText\",\n        children: props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post__caption\",\n      children: props.caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"post__image\",\n      src: props.imageURL,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), comments.map(({\n      id,\n      comment\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__commen\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: props.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.comment\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Input, {\n      value: comment,\n      placeholder: \"Write Comment\",\n      onChange: event => setComment(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: postComment,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"vDMNQUtDpjPqquTzbqtVZcuIh7s=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/ahmad/University/JavaScript/revise-todo/src/Components/Posts.js"],"names":["Avatar","Button","Input","React","useEffect","useState","db","firebase","Posts","props","comments","setComments","comment","setComment","unsubscribe","collection","doc","postID","orderBy","onSnapshot","snapshot","docs","map","id","data","postComment","add","timestamp","firestore","FieldValue","serverTimestamp","username","caption","imageURL","user","event","target","value"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,QAAsC,mBAAtC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,YAAP;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,WAAW,GAAGR,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BP,KAAK,CAACQ,MAAjC,EAAyCF,UAAzC,CAAoD,UAApD,EAAgEG,OAAhE,CAAwE,WAAxE,EAAoF,KAApF,EAA2FC,UAA3F,CAAsGC,QAAQ,IAAE;AAChIT,MAAAA,WAAW,CAACS,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBN,GAAG,KAAG;AAACO,QAAAA,EAAE,EAAEP,GAAG,CAACO,EAAT;AAAaX,QAAAA,OAAO,EAAEI,GAAG,CAACQ,IAAJ;AAAtB,OAAH,CAArB,CAAD,CAAX;AACH,KAFmB,CAApB;AAGA,WAAO,MAAI;AACPV,MAAAA,WAAW;AACd,KAFD;AAGH,GAPQ,EAON,CAACL,KAAK,CAACQ,MAAP,CAPM,CAAT;;AAQA,QAAMQ,WAAW,GAAG,MAAI;AACpBnB,IAAAA,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BP,KAAK,CAACQ,MAAjC,EAAyCF,UAAzC,CAAoD,UAApD,EAAgEW,GAAhE,CAAoE;AAChEC,MAAAA,SAAS,EAAEpB,QAAQ,CAACqB,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EADqD;AAEhElB,MAAAA,OAAO,EAAEA;AAFuD,KAApE;AAIAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAND;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA,kBAAkCJ,KAAK,CAACsB;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBAAgCtB,KAAK,CAACuB;AAAtC;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAEvB,KAAK,CAACwB,QAAxC;AAAkD,MAAA,GAAG,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,YANJ,EAQQvB,QAAQ,CAACY,GAAT,CAAa,CAAC;AAACC,MAAAA,EAAD;AAAKX,MAAAA;AAAL,KAAD,KAAiB;AAC1B,0BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACA;AAAA,oBAASH,KAAK,CAACyB;AAAf;AAAA;AAAA;AAAA;AAAA,gBADA,eAC6B;AAAA,oBAAatB,OAAO,CAACA;AAArB,WAAQW,EAAR;AAAA;AAAA;AAAA;AAAA,gBAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAND,CARR,eAgBI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEX,OAAd;AAAuB,MAAA,WAAW,EAAC,eAAnC;AAAmD,MAAA,QAAQ,EAAGuB,KAAD,IAAStB,UAAU,CAACsB,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAhF;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAiBI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAC,WAAhC;AAA4C,MAAA,OAAO,EAAEZ,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAvCQjB,K;;KAAAA,K;AAyCT,eAAeA,KAAf","sourcesContent":["import { Avatar, Button, Input } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { db } from '../firebase'\nimport firebase from 'firebase';\nimport './Post.css'\nfunction Posts(props) {\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n    useEffect(() => {\n        const unsubscribe = db.collection('posts').doc(props.postID).collection('comments').orderBy('timestamp','asc').onSnapshot(snapshot=>{\n            setComments(snapshot.docs.map(doc=>({id: doc.id, comment: doc.data()})));\n        })\n        return ()=>{\n            unsubscribe();\n        }\n    }, [props.postID])\n    const postComment = ()=>{\n        db.collection('posts').doc(props.postID).collection('comments').add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            comment: comment,\n        })\n        setComment('');\n    }\n    return (\n        <div className='post'>\n            <div className='post__header'>\n                <Avatar />\n                <h3 className='post__headerText'>{props.username}</h3>\n            </div>\n            <div className='post__caption'>{props.caption}</div>\n            <img className='post__image' src={props.imageURL} alt='' />\n            {\n                comments.map(({id, comment})=>{\n                    return(\n                        <div className='post__commen'>\n                        <strong>{props.user}</strong><p key={id}>{comment.comment}</p>   \n                        </div>\n                    )\n                })\n            }\n            <Input value={comment} placeholder='Write Comment' onChange={(event)=>setComment(event.target.value)}/>\n            <Button color='primary' variant='contained' onClick={postComment}>Post</Button>\n        </div>\n    )\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}