{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ahmad/University/JavaScript/revise-todo/src/Components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Button, Input } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { auth, db } from '../firebase';\nimport firebase from 'firebase';\nimport './Post.css';\nimport './Like';\nimport Like from './Like';\n\nfunction Posts({\n  postID,\n  username,\n  user,\n  imageURL,\n  caption\n}) {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n  useEffect(() => {\n    const unsubscribe = db.collection('posts').doc(postID).collection('comments').orderBy('timestamp', 'asc').onSnapshot(snapshot => {\n      setComments(snapshot.docs.map(doc => ({\n        id: doc.id,\n        comment: doc.data()\n      })));\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [postID]);\n\n  const postComment = () => {\n    db.collection('posts').doc(postID).collection('comments').add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      comment: comment,\n      username: user.displayName\n    });\n    setComment('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post__header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"post__headerText\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post__caption\",\n      children: caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"post__image\",\n      src: imageURL,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Like, {\n      userLiked: user ? user.uid : 0\n    }, user ? auth.currentUser.uid : 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), comments.map(({\n      id,\n      comment\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__commentAvatar\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__commentText\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.comment\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Input, {\n      value: comment,\n      placeholder: \"Write Comment\",\n      onChange: event => setComment(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: postComment,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"vDMNQUtDpjPqquTzbqtVZcuIh7s=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/ahmad/University/JavaScript/revise-todo/src/Components/Posts.js"],"names":["Avatar","Button","Input","React","useEffect","useState","auth","db","firebase","Like","Posts","postID","username","user","imageURL","caption","comments","setComments","comment","setComment","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","data","postComment","add","timestamp","firestore","FieldValue","serverTimestamp","displayName","uid","currentUser","event","target","value"],"mappings":"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","sourcesContent":["import { Avatar, Button, Input } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { auth, db } from '../firebase'\nimport firebase from 'firebase';\nimport './Post.css'\nimport './Like'\nimport Like from './Like';\nfunction Posts({postID, username, user, imageURL, caption}) {\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n\n\n    useEffect(() => {\n        const unsubscribe = db.collection('posts').doc(postID).collection('comments').orderBy('timestamp','asc').onSnapshot(snapshot=>{\n            setComments(snapshot.docs.map(doc=>({id: doc.id, comment: doc.data()})));\n        })\n        return ()=>{\n            unsubscribe();\n        }\n    }, [postID])\n\n\n    const postComment = ()=>{\n        db.collection('posts').doc(postID).collection('comments').add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            comment: comment,\n            username: user.displayName,\n        })\n        setComment('');\n    }\n\n\n    return (\n        <div className='post'>\n            <div className='post__header'>\n                <Avatar />\n                <h3 className='post__headerText'>{username}</h3>\n            </div>\n            <div className='post__caption'>{caption}</div>\n            <img className='post__image' src={imageURL} alt='' />\n            <Like key={user?auth.currentUser.uid:0} userLiked={user?user.uid:0}/>\n            {\n                comments.map(({id, comment})=>{\n                    return(\n                        <div className='post__comment'>\n                            <div className='post__commentAvatar'>\n                                <Avatar />\n                            </div>\n                            <div className='post__commentText'>\n                                <strong>{comment.username}</strong>\n                                <p key={id}>{comment.comment}</p> \n                            </div>  \n                        </div>\n                    )\n                })\n            }\n            <Input value={comment} placeholder='Write Comment' onChange={(event)=>setComment(event.target.value)}/>\n            <Button color='primary' variant='contained' onClick={postComment}>Post</Button>\n        </div>\n    )\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}