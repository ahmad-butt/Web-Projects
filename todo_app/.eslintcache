[{"/home/ahmad/University/JavaScript/todo_app/src/index.js":"1","/home/ahmad/University/JavaScript/todo_app/src/App.js":"2","/home/ahmad/University/JavaScript/todo_app/src/reportWebVitals.js":"3","/home/ahmad/University/JavaScript/todo_app/src/Todo.js":"4","/home/ahmad/University/JavaScript/todo_app/src/firebase.js":"5"},{"size":500,"mtime":1609784721577,"results":"6","hashOfConfig":"7"},{"size":1849,"mtime":1609959826873,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1609784721577,"results":"9","hashOfConfig":"7"},{"size":1670,"mtime":1609923497352,"results":"10","hashOfConfig":"7"},{"size":520,"mtime":1609794778167,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"10mnqrj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/ahmad/University/JavaScript/todo_app/src/index.js",[],["25","26"],"/home/ahmad/University/JavaScript/todo_app/src/App.js",[],"/home/ahmad/University/JavaScript/todo_app/src/reportWebVitals.js",[],"/home/ahmad/University/JavaScript/todo_app/src/Todo.js",["27","28"],"//React functional control with import (rfce)\nimport { List, ListItem, ListItemAvatar, Avatar, ListItemText, Button, Modal, Input } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { db } from './firebase'\nimport './Todo.css'\nfunction Todo(props) {\n    const [open, setOpen] = useState(false);\n    const [input, setInput] = useState([]);\n    const handleOpen = ()=>{\n        setOpen(true);\n    };\n    const handleClose = ()=>{\n        setOpen(false);\n    };\n    const updateTodo = ()=>{\n        db.collection('todos').doc(props.text.id).set({\n            todo: input,\n        },{merge:true})\n        setInput('');\n    }   \n    return (\n        <>\n        <Modal\n            open={open}\n            onClose={e => setOpen(false)}\n            >\n            <div>\n                <Input placeholder={props.text.todo} value={input} onChange={event => setInput(event.target.value)}/>\n                <Button onClick = {e => updateTodo()}>Update Todo</Button>\n                <Button onClick = {e => setOpen(false)}>Close</Button>\n            </div>\n        </Modal>\n        <List class='todoList'>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar>\n                        <h3>{`=>`}</h3>\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={props.text.todo} secondary=\"Let's get this Done\" />\n            </ListItem>\n            <Button onClick = {e => setOpen(true)}>Edit</Button>\n            <Button onClick={event => db.collection('todos').doc(props.text.id).delete()} color='secondary'>DELETE TODO</Button>\n        </List>\n        </>\n    )\n}\n\nexport default Todo\n",["29","30"],"/home/ahmad/University/JavaScript/todo_app/src/firebase.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":9,"column":11,"nodeType":"37","messageId":"38","endLine":9,"endColumn":21},{"ruleId":"35","severity":1,"message":"39","line":12,"column":11,"nodeType":"37","messageId":"38","endLine":12,"endColumn":22},{"ruleId":"31","replacedBy":"40"},{"ruleId":"33","replacedBy":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'handleOpen' is assigned a value but never used.","Identifier","unusedVar","'handleClose' is assigned a value but never used.",["42"],["43"],"no-global-assign","no-unsafe-negation"]