{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Todo","props","useState","open","setOpen","input","setInput","Modal","onClose","e","Input","placeholder","text","todo","value","onChange","event","target","Button","onClick","collection","doc","id","set","merge","List","class","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","delete","color","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","className","FormControl","InputLabel","disabled","type","preventDefault","add","timestamp","FieldValue","serverTimestamp","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAWMA,EATcC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAEIC,Y,MCqCRC,MA3Cf,SAAcC,GAAQ,IAAD,EACOC,oBAAS,GADhB,mBACVC,EADU,KACJC,EADI,OAESF,mBAAS,IAFlB,mBAEVG,EAFU,KAEHC,EAFG,KAejB,OACI,qCACA,cAACC,EAAA,EAAD,CACIJ,KAAMA,EACNK,QAAS,SAAAC,GAAC,OAAIL,GAAQ,IAF1B,SAII,gCACI,cAACM,EAAA,EAAD,CAAOC,YAAaV,EAAMW,KAAKC,KAAMC,MAAOT,EAAOU,SAAU,SAAAC,GAAK,OAAIV,EAASU,EAAMC,OAAOH,UAC5F,cAACI,EAAA,EAAD,CAAQC,QAAW,SAAAV,GAAC,OAb5BpB,EAAG+B,WAAW,SAASC,IAAIpB,EAAMW,KAAKU,IAAIC,IAAI,CAC1CV,KAAMR,GACR,CAACmB,OAAM,SACTlB,EAAS,KAUD,yBACA,cAACY,EAAA,EAAD,CAAQC,QAAW,SAAAV,GAAC,OAAIL,GAAQ,IAAhC,wBAGR,eAACqB,EAAA,EAAD,CAAMC,MAAM,WAAZ,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,wCAGR,cAACC,EAAA,EAAD,CAAcC,QAAS9B,EAAMW,KAAKC,KAAMmB,UAAU,2BAEtD,cAACd,EAAA,EAAD,CAAQC,QAAW,SAAAV,GAAC,OAAIL,GAAQ,IAAhC,kBACA,cAACc,EAAA,EAAD,CAAQC,QAAS,SAAAH,GAAK,OAAI3B,EAAG+B,WAAW,SAASC,IAAIpB,EAAMW,KAAKU,IAAIW,UAAUC,MAAM,YAApF,gC,MCEGC,MApCf,WAAgB,IAAD,EACajC,mBAAS,IADtB,mBACNkC,EADM,KACCC,EADD,OAEanC,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAiBb,OAdAgC,qBAAU,WACRjD,EAAG+B,WAAW,SAASmB,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GAC5DJ,EAASI,EAASC,KAAKC,KAAI,SAAAtB,GAAG,MAAK,CAAEC,GAAID,EAAIC,GAAIT,KAAMQ,EAAIuB,OAAO/B,eAEpE,IAWA,sBAAKgC,UAAU,MAAf,UACE,wDACA,iCACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,yBACA,cAACrC,EAAA,EAAD,CAAOI,MAAOT,EAAOU,SAAU,SAAAC,GAAK,OAAIV,EAASU,EAAMC,OAAOH,aAEhE,cAACI,EAAA,EAAD,CAAQ8B,UAAW3C,EAAO4C,KAAK,SAAS9B,QAjB9B,SAACH,GACfA,EAAMkC,iBACN7D,EAAG+B,WAAW,SAAS+B,IAAI,CACzBtC,KAAMR,EACN+C,UAAW9D,IAASS,UAAUsD,WAAWC,oBAG3ChD,EAAS,KAUqDiD,QAAQ,YAAYrB,MAAM,UAApF,yBAEF,6BACGE,EAAMO,KAAI,SAAA9B,GAAI,OACb,cAAC,EAAD,CAAMD,KAAMC,aCzBP2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.863658ed.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from 'firebase'\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyBe_R_sfKgB8xVaWl7X2ITXut9XA2BJWmQ\",\n    authDomain: \"todo-app-cp-a36ae.firebaseapp.com\",\n    projectId: \"todo-app-cp-a36ae\",\n    storageBucket: \"todo-app-cp-a36ae.appspot.com\",\n    messagingSenderId: \"939470659414\",\n    appId: \"1:939470659414:web:c25df4661e845770fd40f7\",\n    measurementId: \"G-1F3Q22FZBE\"\n})\nconst db = firebaseApp.firestore();\nexport{db};","//React functional control with import (rfce)\nimport { List, ListItem, ListItemAvatar, Avatar, ListItemText, Button, Modal, Input } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { db } from './firebase'\nimport './Todo.css'\nfunction Todo(props) {\n    const [open, setOpen] = useState(false);\n    const [input, setInput] = useState([]);\n    const handleOpen = ()=>{\n        setOpen(true);\n    };\n    const handleClose = ()=>{\n        setOpen(false);\n    };\n    const updateTodo = ()=>{\n        db.collection('todos').doc(props.text.id).set({\n            todo: input,\n        },{merge:true})\n        setInput('');\n    }   \n    return (\n        <>\n        <Modal\n            open={open}\n            onClose={e => setOpen(false)}\n            >\n            <div>\n                <Input placeholder={props.text.todo} value={input} onChange={event => setInput(event.target.value)}/>\n                <Button onClick = {e => updateTodo()}>Update Todo</Button>\n                <Button onClick = {e => setOpen(false)}>Close</Button>\n            </div>\n        </Modal>\n        <List class='todoList'>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar>\n                        <h3>{`=>`}</h3>\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={props.text.todo} secondary=\"Let's get this Done\" />\n            </ListItem>\n            <Button onClick = {e => setOpen(true)}>Edit</Button>\n            <Button onClick={event => db.collection('todos').doc(props.text.id).delete()} color='secondary'>DELETE TODO</Button>\n        </List>\n        </>\n    )\n}\n\nexport default Todo\n","import React, { useEffect, useState } from 'react';\nimport { Button, FormControl, InputLabel, Input } from '@material-ui/core';\nimport './Todo'\nimport './App.css';\nimport Todo from './Todo';\nimport { db } from './firebase';\nimport firebase from 'firebase'\n\nfunction App() {\n  const [todos, setTodos] = useState([]); //Short term memory. JS Hook\n  const [input, setInput] = useState('');\n  useEffect(()=>{   //Two parameters function and dependency. Function to get data from Database and dependency which enable it to load everytime the dependancy occur.\n    db.collection('todos').orderBy('timestamp','desc').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({ id: doc.id, todo: doc.data().todo})));\n    })\n  },[]);\n  const addTodo = (event)=>{  //This function add TODO to Database\n    event.preventDefault();\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n    // setTodos([...todos,input]); //spread function which appends todo state\n    setInput(''); //Clear input after hitting submit\n  }\n  return (\n    <div className=\"App\">\n      <h1>Welcome to TODO App!!!</h1>\n      <form>\n        <FormControl>\n          <InputLabel >Write TODO</InputLabel>\n          <Input value={input} onChange={event => setInput(event.target.value)}/>\n        </FormControl>\n        <Button disabled={!input} type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"primary\">Add TODO</Button>\n      </form>\n      <ul>\n        {todos.map(todo=>(\n          <Todo text={todo}/>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n//Important things are state and props\n// JSX,we can write dynamic javascript aswell\n//state => short term memory when we refresh the state is cleared\n//props allows us to differentiate one component from another","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}