{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ahmad/University/JavaScript/todo_app/src/Todo.js\",\n    _s = $RefreshSig$();\n\n//React functional control with import (rfce)\nimport { List, ListItem, ListItemAvatar, Avatar, ListItemText, Button, Modal, Input } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { db } from './firebase';\nimport './Todo.css';\n\nfunction Todo(props) {\n  _s();\n\n  const [open, setOpen] = useState([false]);\n  const [input, setInput] = useState([]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const updateTodo = () => {\n    db.collection('todos').doc(props.text.id).set({\n      todo: input\n    }, {\n      merge: true\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: e => setOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: props.text.todo,\n          value: input,\n          onChange: event => setInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => updateTodo(),\n          children: \"Update Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => setOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      class: \"todoList\",\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: `=>`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: props.text.todo,\n          secondary: \"Let's get this Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => setOpen(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: event => db.collection('todos').doc(props.text.id).delete(),\n        color: \"secondary\",\n        children: \"DELETE TODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Todo, \"XtOd4q/bT1e0f3iczTmJpa6Z1Qg=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/ahmad/University/JavaScript/todo_app/src/Todo.js"],"names":["List","ListItem","ListItemAvatar","Avatar","ListItemText","Button","Modal","Input","React","useState","db","Todo","props","open","setOpen","input","setInput","handleOpen","handleClose","updateTodo","collection","doc","text","id","set","todo","merge","e","event","target","value","delete"],"mappings":"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","sourcesContent":["//React functional control with import (rfce)\nimport { List, ListItem, ListItemAvatar, Avatar, ListItemText, Button, Modal, Input } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { db } from './firebase'\nimport './Todo.css'\nfunction Todo(props) {\n    const [open, setOpen] = useState([false]);\n    const [input, setInput] = useState([]);\n    const handleOpen = ()=>{\n        setOpen(true);\n    };\n    const handleClose = ()=>{\n        setOpen(false);\n    };\n    const updateTodo = ()=>{\n        db.collection('todos').doc(props.text.id).set({\n            todo: input,\n        },{merge:true})\n        setInput('');\n    }   \n    return (\n        <>\n        <Modal\n            open={open}\n            onClose={e => setOpen(false)}\n            >\n            <div>\n                <Input placeholder={props.text.todo} value={input} onChange={event => setInput(event.target.value)}/>\n                <Button onClick = {e => updateTodo()}>Update Todo</Button>\n                <Button onClick = {e => setOpen(false)}>Close</Button>\n            </div>\n        </Modal>\n        <List class='todoList'>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar>\n                        <h3>{`=>`}</h3>\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={props.text.todo} secondary=\"Let's get this Done\" />\n            </ListItem>\n            <Button onClick = {e => setOpen(true)}>Edit</Button>\n            <Button onClick={event => db.collection('todos').doc(props.text.id).delete()} color='secondary'>DELETE TODO</Button>\n        </List>\n        </>\n    )\n}\n\nexport default Todo\n"]},"metadata":{},"sourceType":"module"}